# Node.js specific ignores
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-store/ # For pnpm package manager
.env           # Environment variables (CRITICAL for secrets)

# Logs and temporary files
logs/
*.log
npm-debug.log*
yarn-debug.log*
lerna-debug.log*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory
coverage/

# Production builds
dist/
build/
.next/ # For Next.js projects
.nuxt/ # For Nuxt.js projects
out/   # Often used for static site generation output

# VS Code specific ignores
.vscode/
# Only ignore settings/launch configurations if you don't want to share them
# For example, to ignore specific user settings, you might do:
# .vscode/*.code-workspace
# .vscode/settings.json
# .vscode/launch.json
# .vscode/extensions.json
# Often, you *do* want to share recommended extensions/settings, so consider what to ignore here.

# OS generated files
.DS_Store          # macOS
.envrc             # direnv environment file
.idea/             # IntelliJ/WebStorm/other JetBrains IDEs
.project           # Eclipse
.classpath
.c9/               # Cloud9 IDE
*.sublime-project  # Sublime Text
*.sublime-workspace
.metadata/         # Eclipse
ehcache/           # Ehcache for Java
hs_err_pid* # JVM crash logs
*.swp              # Vim swap files
*.bak              # Backup files
*.swo

# Test related
/.nyc_output
/junit.xml

# Thumbnail files (e.g. from image previews)
.thumbs

# If you're compiling TypeScript (e.g. into a 'dist' folder)
# This assumes your TypeScript source files are tracked, and only the compiled JS is ignored.
# You'd typically ignore the output directory (like 'dist/' or 'build/') above.
# *.js             # Don't ignore all JS if it's your source
# *.js.map

# For Docker (if using it)
.dockerignore

# If you have specific secrets stored elsewhere (e.g., in a 'secrets' folder)
# secrets/